<script lang="ts">
	import { HttpClient } from '@angular/common/http';
	import { effect, inject } from '@angular/core';
	import { subject } from '@casl/ability';
	import type { Org } from '@prisma/client';
	import { injectAppAbility } from '../utils/inject-app-ability';

	const http = inject(HttpClient);
	const ability = injectAppAbility();

	effect((onCleanup) => {
		const sub = http
			.get('/api/users/me', { withCredentials: true })
			.subscribe((user) => {
				console.log(user, ability);
				ability.update(user['abilities']);

				console.log(
					ability.can(
						'update',
						subject('Org', {
							id: '123',
							name: 'My Org',
							key: 'my-org',
							members: [{ userId: '123', role: 'ADMIN' }],
						} as Org),
					),
				);
			});
		onCleanup(() => sub.unsubscribe());
	});

	let count = 0;

	function increment() {
		count++;
	}
</script>

<template>
	<div>
		<a href="https://analogjs.org/" target="_blank">
			<img alt="Analog Logo" class="logo analog" src="/analog.svg" />
		</a>
	</div>

	<h2>Analog</h2>

	<h3>The fullstack meta-framework for Angular!</h3>

	<div class="card">
		<button type="button" (click)="increment()">Count {{ count }}</button>
	</div>

	<p class="read-the-docs">
		For guides on how to customize this project, visit the
		<a href="https://analogjs.org" target="_blank">Analog documentation</a>
	</p>
</template>

<style>
	.logo {
		will-change: filter;
	}
	.logo:hover {
		filter: drop-shadow(0 0 2em #646cffaa);
	}
	.read-the-docs {
		color: #888;
	}
</style>
